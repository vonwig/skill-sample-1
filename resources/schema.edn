{:attributes
 {;; model a simple webhook-based observation followed by a subscription
  :vonwig.testing/observation                      {:db.entity/attrs [:vonwig.testing.observation/id]}
  :vonwig.testing.observation/id                   {:db/valueType    :db.type/string
                                                    :db/cardinality  :db.cardinality/one
                                                    :db/doc          "should be a random guid"}
  :vonwig.testing.observation/webhook-value        {:db/valueType    :db.type/string
                                                    :db/cardinality  :db.cardinality/one
                                                    :db/doc          "some observation on a webhook"}
  :vonwig.testing.observation/seen-by-subscriber   {:db/valueType    :db.type/boolean
                                                    :db/cardinality  :db.cardinality/one
                                                    :db/doc          "confirm that subscription fires"}
  
  ;; model a named check that could be added to an Image
  ; :docker.image/check                  {:db.entity/attrs [:git.commit.signature/commit]}
  ; :docker.image.check/image            {:db/valueType    :db.type/ref
                                        ; :db/doc          "Reference to the image being checked"
                                        ; :db/cardinality  :db.cardinality/one}
  ; :docker.image.check/name             {:db/valueType    :db.type/string
                                        ; :db/doc          "name of docker image check"
                                        ; :db/cardinality  :db.cardinality/one}
  ; :docker.image.check/status           {:db/valueType    :db.type/ref
                                        ; :db/doc          "passed or failed"
                                        ; :db/cardinality  :db.cardinality/one}
  ; ;; enums!
  ; :docker.image.check.status/PASS      {:db/doc "image has been checked and it passed"}
  ; :docker.image.check.status/FAIL      {:db/doc "image has been checked and it failed"}
  ; :docker.image.check.status/MISSING   {:db/doc "image was not checked"}
}}
